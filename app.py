import pandas as pd
import streamlit as st

# ƒê·ªçc d·ªØ li·ªáu
df = pd.read_excel("A787.xlsx")

# Chu·∫©n h√≥a text (gi·ªØ NaN, kh√¥ng drop)
for col in ["CATEGORY", "A/C", "DESCRIPTION"]:
    df[col] = (
        df[col]
        .astype(str)
        .str.strip()
        .str.replace(r"\s+", " ", regex=True)
        .str.upper()
    )
    # N·∫øu gi√° tr·ªã l√† "NAN" (do NaN -> string), thay b·∫±ng None
    df[col] = df[col].replace("NAN", None)

# --- App ---
st.title("üîé Tra c·ª©u Part Number (PN)")

# Kh·ªüi t·∫°o state
if "step" not in st.session_state:
    st.session_state.step = 1
if "category" not in st.session_state:
    st.session_state.category = None
if "aircraft" not in st.session_state:
    st.session_state.aircraft = None
if "description" not in st.session_state:
    st.session_state.description = None


# Step 1: ch·ªçn Category
if st.session_state.step == 1:
    categories = sorted(df["CATEGORY"].dropna().unique())
    category = st.selectbox("üìÇ B·∫°n mu·ªën tra c·ª©u g√¨?", categories)

    if st.button("Ti·∫øp t·ª•c ‚û°Ô∏è"):
        st.session_state.category = category
        st.session_state.step = 2
        st.rerun()

# Step 2: ch·ªçn A/C
elif st.session_state.step == 2:
    st.write(f"‚úÖ Category: **{st.session_state.category}**")
    aircrafts = sorted(
        df[df["CATEGORY"] == st.session_state.category]["A/C"].dropna().unique()
    )
    aircraft = st.selectbox("‚úàÔ∏è Lo·∫°i t√†u n√†o?", aircrafts)

    col1, col2 = st.columns(2)
    if col1.button("‚¨ÖÔ∏è Quay l·∫°i"):
        st.session_state.step = 1
        st.rerun()
    if col2.button("Ti·∫øp t·ª•c ‚û°Ô∏è"):
        st.session_state.aircraft = aircraft
        st.session_state.step = 3
        st.rerun()

# Step 3: ch·ªçn Description
elif st.session_state.step == 3:
    st.write(f"‚úÖ Category: **{st.session_state.category}**")
    st.write(f"‚úÖ A/C: **{st.session_state.aircraft}**")

    descriptions = sorted(
        df[
            (df["CATEGORY"] == st.session_state.category)
            & (df["A/C"] == st.session_state.aircraft)
        ]["DESCRIPTION"].dropna().unique()
    )
    description = st.selectbox("üìë B·∫°n mu·ªën tra c·ª©u Item n√†o?", descriptions)

    col1, col2 = st.columns(2)
    if col1.button("‚¨ÖÔ∏è Quay l·∫°i"):
        st.session_state.step = 2
        st.rerun()
    if col2.button("Xem k·∫øt qu·∫£ ‚úÖ"):
        st.session_state.description = description
        st.session_state.step = 4
        st.rerun()

# Step 4: Hi·ªán k·∫øt qu·∫£
elif st.session_state.step == 4:
    st.write(f"‚úÖ Category: **{st.session_state.category}**")
    st.write(f"‚úÖ A/C: **{st.session_state.aircraft}**")
    st.write(f"‚úÖ Description ch·ª©a: **{st.session_state.description}**")

    # L·ªçc: l·∫•y t·∫•t c·∫£ description c√≥ ch·ª©a t·ª´ kh√≥a ƒë∆∞·ª£c ch·ªçn
    result = df[
        (df["CATEGORY"] == st.session_state.category)
        & (df["A/C"] == st.session_state.aircraft)
        & (df["DESCRIPTION"].str.contains(st.session_state.description, na=False))
    ]

    if not result.empty:
        st.success(f"T√¨m th·∫•y {len(result)} d√≤ng d·ªØ li·ªáu:")
        cols = ["PART NUMBER (PN)", "DESCRIPTION"]
        if "NOTE" in df.columns:
            cols.append("NOTE")
        st.dataframe(result[cols].reset_index(drop=True))
    else:
        st.error("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu!")

    if st.button("üîÑ Tra c·ª©u l·∫°i"):
        st.session_state.step = 1
        st.rerun()
