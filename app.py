import pandas as pd
import streamlit as st

# ============ ƒê·ªåC & X·ª¨ L√ù D·ªÆ LI·ªÜU ============
df = pd.read_excel("A787.xlsx")

# Chu·∫©n h√≥a t√™n c·ªôt
df.columns = df.columns.str.strip().str.upper()

# Map t√™n c·ªôt n·∫øu trong Excel kh√°c chu·∫©n
rename_map = {
    "CAT": "CATEGORY",
    "CATEGORY ": "CATEGORY",
    "AC": "A/C",
    "AIRCRAFT": "A/C",
    "DESC": "DESCRIPTION",
    "DESCRIPTIONS": "DESCRIPTION",
    "PN": "PART NUMBER (PN)",
    "PART NUMBER": "PART NUMBER (PN)",
}
df = df.rename(columns=lambda x: rename_map.get(x, x))

# Debug: hi·ªán t√™n c·ªôt (gi√∫p check l·∫ßn ƒë·∫ßu, c√≥ th·ªÉ t·∫Øt ƒëi sau)
st.write("üìë C√°c c·ªôt sau khi chu·∫©n h√≥a:", df.columns.tolist())

# Chu·∫©n h√≥a text trong c√°c c·ªôt quan tr·ªçng
for col in ["CATEGORY", "A/C", "DESCRIPTION"]:
    if col in df.columns:
        df[col] = (
            df[col]
            .astype(str)
            .str.strip()
            .str.replace(r"\s+", " ", regex=True)
            .str.upper()
        )
        df[col] = df[col].replace("NAN", None)  # b·ªè ch·ªØ NAN gi·∫£


# ============ APP ============
st.title("üîé Tra c·ª©u Part Number (PN)")

# Reset n√∫t
if st.button("üîÑ Tra c·ª©u l·∫°i"):
    st.session_state.clear()
    st.rerun()

# --- Step 1: ch·ªçn Category ---
if "CATEGORY" not in df.columns:
    st.error("‚ö†Ô∏è File Excel kh√¥ng c√≥ c·ªôt CATEGORY (ho·∫∑c ch∆∞a map ƒë√∫ng).")
else:
    categories = sorted(df["CATEGORY"].dropna().unique())
    category = st.selectbox("üìÇ B·∫°n mu·ªën tra c·ª©u g√¨?", categories, key="category")

    if category:
        # --- Step 2: ch·ªçn A/C ---
        if "A/C" not in df.columns:
            st.error("‚ö†Ô∏è File Excel kh√¥ng c√≥ c·ªôt A/C (ho·∫∑c ch∆∞a map ƒë√∫ng).")
        else:
            aircrafts = sorted(
                df[df["CATEGORY"] == category]["A/C"].dropna().unique()
            )
            aircraft = st.selectbox("‚úàÔ∏è Lo·∫°i t√†u n√†o?", aircrafts, key="aircraft")

            if aircraft:
                # --- Step 3: ch·ªçn Description ---
                if "DESCRIPTION" not in df.columns:
                    st.error("‚ö†Ô∏è File Excel kh√¥ng c√≥ c·ªôt DESCRIPTION (ho·∫∑c ch∆∞a map ƒë√∫ng).")
                else:
                    descriptions = sorted(
                        df[
                            (df["CATEGORY"] == category)
                            & (df["A/C"] == aircraft)
                        ]["DESCRIPTION"].dropna().unique()
                    )

                    description = st.selectbox(
                        "üìë B·∫°n mu·ªën tra c·ª©u Item n√†o?",
                        descriptions,
                        key="description",
                    )

                    if description:
                        # --- Step 4: Hi·ªán k·∫øt qu·∫£ ---
                        result = df[
                            (df["CATEGORY"] == category)
                            & (df["A/C"] == aircraft)
                            & (df["DESCRIPTION"] == description)
                        ]

                        if not result.empty:
                            st.success(f"T√¨m th·∫•y {len(result)} d√≤ng d·ªØ li·ªáu:")
                            cols = ["PART NUMBER (PN)", "DESCRIPTION"]
                            if "NOTE" in df.columns:
                                cols.append("NOTE")
                            st.dataframe(result[cols].reset_index(drop=True))
                        else:
                            st.error("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu!")
